#version 330 core

in vec2 texCoords;

uniform vec2 resolution; //window resolution

float getDistance(vec3 point){
//and this.... dist at z must be > radius
    vec4 sphere = vec4(0.0f, 0.0f, 101.0f, 100.0f);
    float sphereDist = length(point - sphere.xyz) - sphere.w;

    return sphereDist;
}

float rayMarch(vec3 rayOrigin, vec3 rayDir){
    float distanceFromOrigin = 0.0f;

    for(int i = 0; i < 100; i++){ //100 = MAX_STEPS
        vec3 currentMarchingLocation = rayOrigin + rayDir * distanceFromOrigin;
        float distanceToSurface = getDistance(currentMarchingLocation);
        distanceFromOrigin = distanceFromOrigin + distanceToSurface;

        if(distanceFromOrigin > 100.0f || distanceToSurface < 0.01f)
            break;
    }

    return distanceFromOrigin;
}

void main()
{
    vec2 pixelCoord = gl_FragCoord.xy;
    vec2 uv = vec2(pixelCoord.x - resolution.x/2.0, pixelCoord.y - resolution.y/2.0f);

    vec3 rayOrigin = vec3(0, 0, 0);
    vec3 rayDir = normalize(vec3(uv, 1.0f));

    float distanceToSurface = rayMarch(rayOrigin, rayDir);

    //THIS FKING THING BRO (DIST/255.0f)
    vec3 color = vec3(distanceToSurface/255.0f,
      distanceToSurface/255.0f, distanceToSurface/255.0f);

    gl_FragColor = vec4(color, 1.0);
}
